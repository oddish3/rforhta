---
title: "Koan #1: Vectors"
format: html
engine: knitr
filters:
  - webr
---

Intro to the Tidyverse by Colleen O'Briant
Koan #1: Vectors

*Complete each question, then use the individual test functions to check your work immediately!*

## Question 1
Make the first element of this numeric vector '6'.

```{webr-r}
# Fill in the blank:
q1_answer <- c(__, 4, 5, 2, 3)

# Test your answer:
test_q1 <- function() {
  if (!exists("q1_answer")) {
    cat("❌ Create q1_answer first!\n")
    return(FALSE)
  }
  if (!is.numeric(q1_answer)) {
    cat("❌ q1_answer should be numeric\n")
    return(FALSE)
  }
  if (length(q1_answer) != 5) {
    cat("❌ q1_answer should have 5 elements\n")
    return(FALSE)
  }
  if (q1_answer[1] != 6) {
    cat("❌ First element should be 6, got:", q1_answer[1], "\n")
    return(FALSE)
  }
  cat("✅ Question 1 correct!\n")
  return(TRUE)
}

# Run test (uncomment when ready):
# test_q1()
```

## Question 2
Make the third element of this character vector 'economics'.

```{webr-r}
# Fill in the blank:
q2_answer <- c("apple", "banana", __)

# Test your answer:
test_q2 <- function() {
  if (!exists("q2_answer")) {
    cat("❌ Create q2_answer first!\n")
    return(FALSE)
  }
  if (!is.character(q2_answer)) {
    cat("❌ q2_answer should be a character vector\n")
    return(FALSE)
  }
  if (length(q2_answer) != 3) {
    cat("❌ q2_answer should have 3 elements\n")
    return(FALSE)
  }
  if (q2_answer[3] != "economics") {
    cat("❌ Third element should be 'economics', got:", q2_answer[3], "\n")
    return(FALSE)
  }
  cat("✅ Question 2 correct!\n")
  return(TRUE)
}

# Run test (uncomment when ready):
# test_q2()
```

## Question 3a
Add these two numeric vectors.

```{webr-r}
# Fill in the blanks:
q3a_answer <- c(6, 3, 2) + c(3, 2, 1) == c(__, __, __)

# Test your answer:
test_q3a <- function() {
  if (!exists("q3a_answer")) {
    cat("❌ Create q3a_answer first!\n")
    return(FALSE)
  }
  if (!is.logical(q3a_answer)) {
    cat("❌ q3a_answer should be logical (TRUE/FALSE values)\n")
    return(FALSE)
  }
  if (length(q3a_answer) != 3) {
    cat("❌ q3a_answer should have 3 elements\n")
    return(FALSE)
  }
  if (!all(q3a_answer)) {
    cat("❌ Not all comparisons are TRUE. Check your addition!\n")
    cat("Hint: c(6, 3, 2) + c(3, 2, 1) =", c(6, 3, 2) + c(3, 2, 1), "\n")
    return(FALSE)
  }
  cat("✅ Question 3a correct!\n")
  return(TRUE)
}

# Run test (uncomment when ready):
# test_q3a()
```

## Question 3b
Find the minimum of this vector.

```{webr-r}
# Fill in the blank:
q3b_answer <- min(c(6, 3, 2)) == __

# Test your answer:
test_q3b <- function() {
  if (!exists("q3b_answer")) {
    cat("❌ Create q3b_answer first!\n")
    return(FALSE)
  }
  if (!is.logical(q3b_answer)) {
    cat("❌ q3b_answer should be logical (TRUE/FALSE)\n")
    return(FALSE)
  }
  if (length(q3b_answer) != 1) {
    cat("❌ q3b_answer should have 1 element\n")
    return(FALSE)
  }
  if (!q3b_answer) {
    cat("❌ Comparison is FALSE. Check what min(c(6, 3, 2)) equals!\n")
    return(FALSE)
  }
  cat("✅ Question 3b correct!\n")
  return(TRUE)
}

# Run test (uncomment when ready):
# test_q3b()
```

## Final Test - Run All Questions

```{webr-r}
# Run this after completing all questions
run_all_tests <- function() {
  cat("=== RUNNING ALL TESTS ===\n\n")
  
  tests <- list(
    "Question 1" = test_q1,
    "Question 2" = test_q2,
    "Question 3a" = test_q3a,
    "Question 3b" = test_q3b
    # Add more as you create them
  )
  
  passed <- 0
  total <- length(tests)
  
  for (name in names(tests)) {
    cat("Testing", name, "...\n")
    if (tests[[name]]()) {
      passed <- passed + 1
    }
    cat("\n")
  }
  
  cat("=== RESULTS ===\n")
  cat("Passed:", passed, "out of", total, "tests\n")
  
  if (passed == total) {
    cat("🎉 Perfect score! You've mastered this koan!\n")
  } else {
    cat("💪 Keep working on the failed tests!\n")
  }
}

# Uncomment to run all tests:
# run_all_tests()
```
