---
title: "Koan #1: Vectors"
format: html
engine: knitr
filters:
  - webr
---

Intro to the Tidyverse by Colleen O'Briant
Koan #1: Vectors

## Question 1
Make the first element of this numeric vector '6'.

```{webr-r}
# Fill in the blank and assign to q1_answer:
q1_answer <- c(__, 4, 5, 2, 3)
```

## Question 2
Make the third element of this character vector 'economics'.

```{webr-r}
# Fill in the blank and assign to q2_answer:
q2_answer <- c("apple", "banana", __)
```

## Question 3a
Add these two numeric vectors.

```{webr-r}
# Fill in the blanks and assign to q3a_answer:
q3a_answer <- c(6, 3, 2) + c(3, 2, 1) == c(__, __, __)
```

## Question 3b
Find the minimum of this vector.

```{webr-r}
# Fill in the blank and assign to q3b_answer:
q3b_answer <- min(c(6, 3, 2)) == __
```

## Question 3c
Find the sum of all elements of this vector.

```{webr-r}
# Fill in the blank and assign to q3c_answer:
q3c_answer <- sum(c(6, 3, 2)) == __
```

## Question 3d
Multiply a scalar and a vector.

```{webr-r}
# Fill in the blanks and assign to q3d_answer:
q3d_answer <- 100 * c(6, 3, 2) == c(__, __, __)
```

## Question 3e
Divide two vectors.

```{webr-r}
# Fill in the blanks and assign to q3e_answer:
q3e_answer <- c(6, 3, 2) / c(2, 3, 1) == c(__, __, __)
```

## Question 4
Create a vector of length 5.

```{webr-r}
# Create any vector of length 5 and assign to q4_answer:
q4_answer <- ___
```

## Question 5
Use the colon operator to create consecutive numbers.

```{webr-r}
# Fill in the blanks and assign to q5_answer:
q5_answer <- c(2, 3, 4) == __:__
```

## Question 6
Create a random character vector that draws "heads" or "tails".

```{webr-r}
# Fill in the blank and assign to q6_answer:
q6_answer <- sample(__, size = 5, replace = TRUE)
```

## Check Your Answers

Run this code block to test all your answers at once:

```{webr-r}
# Custom test function (no external packages needed)
check_koan <- function() {
  results <- list()
  total_tests <- 0
  passed_tests <- 0
  
  cat("=== KOAN #1: VECTORS TEST RESULTS ===\n\n")
  
  # Test 1
  total_tests <- total_tests + 1
  if (exists("q1_answer") && is.numeric(q1_answer) && length(q1_answer) == 5 && q1_answer[1] == 6) {
    cat("âœ“ Question 1: PASSED\n")
    passed_tests <- passed_tests + 1
  } else {
    cat("âœ— Question 1: FAILED - Check that first element is 6\n")
  }
  
  # Test 2
  total_tests <- total_tests + 1
  if (exists("q2_answer") && is.character(q2_answer) && length(q2_answer) == 3 && q2_answer[3] == "economics") {
    cat("âœ“ Question 2: PASSED\n")
    passed_tests <- passed_tests + 1
  } else {
    cat("âœ— Question 2: FAILED - Check that third element is 'economics'\n")
  }
  
  # Test 3a
  total_tests <- total_tests + 1
  if (exists("q3a_answer") && is.logical(q3a_answer) && length(q3a_answer) == 3 && all(q3a_answer)) {
    cat("âœ“ Question 3a: PASSED\n")
    passed_tests <- passed_tests + 1
  } else {
    cat("âœ— Question 3a: FAILED - Check your vector addition\n")
  }
  
  # Test 3b
  total_tests <- total_tests + 1
  if (exists("q3b_answer") && is.logical(q3b_answer) && length(q3b_answer) == 1 && q3b_answer) {
    cat("âœ“ Question 3b: PASSED\n")
    passed_tests <- passed_tests + 1
  } else {
    cat("âœ— Question 3b: FAILED - Check the minimum value\n")
  }
  
  # Test 3c
  total_tests <- total_tests + 1
  if (exists("q3c_answer") && is.logical(q3c_answer) && length(q3c_answer) == 1 && q3c_answer) {
    cat("âœ“ Question 3c: PASSED\n")
    passed_tests <- passed_tests + 1
  } else {
    cat("âœ— Question 3c: FAILED - Check the sum calculation\n")
  }
  
  # Test 3d
  total_tests <- total_tests + 1
  if (exists("q3d_answer") && is.logical(q3d_answer) && length(q3d_answer) == 3 && all(q3d_answer)) {
    cat("âœ“ Question 3d: PASSED\n")
    passed_tests <- passed_tests + 1
  } else {
    cat("âœ— Question 3d: FAILED - Check your scalar multiplication\n")
  }
  
  # Test 3e
  total_tests <- total_tests + 1
  if (exists("q3e_answer") && is.logical(q3e_answer) && length(q3e_answer) == 3 && all(q3e_answer)) {
    cat("âœ“ Question 3e: PASSED\n")
    passed_tests <- passed_tests + 1
  } else {
    cat("âœ— Question 3e: FAILED - Check your vector division\n")
  }
  
  # Test 4
  total_tests <- total_tests + 1
  if (exists("q4_answer") && length(q4_answer) == 5) {
    cat("âœ“ Question 4: PASSED\n")
    passed_tests <- passed_tests + 1
  } else {
    cat("âœ— Question 4: FAILED - Vector should have length 5\n")
  }
  
  # Test 5
  total_tests <- total_tests + 1
  if (exists("q5_answer") && is.logical(q5_answer) && length(q5_answer) == 3 && all(q5_answer)) {
    cat("âœ“ Question 5: PASSED\n")
    passed_tests <- passed_tests + 1
  } else {
    cat("âœ— Question 5: FAILED - Check your colon operator usage\n")
  }
  
  # Test 6
  total_tests <- total_tests + 1
  if (exists("q6_answer") && is.character(q6_answer) && length(q6_answer) == 5 && 
      all(q6_answer %in% c("heads", "tails"))) {
    cat("âœ“ Question 6: PASSED\n")
    passed_tests <- passed_tests + 1
  } else {
    cat("âœ— Question 6: FAILED - Should be 5 random 'heads' or 'tails'\n")
  }
  
  cat("\n=== SUMMARY ===\n")
  cat("Passed:", passed_tests, "out of", total_tests, "tests\n")
  
  if (passed_tests == total_tests) {
    cat("ðŸŽ‰ Congratulations! You've mastered vectors!\n")
  } else {
    cat("Keep working on the failed questions and test again.\n")
  }
}

# Run the tests
check_koan()
```
